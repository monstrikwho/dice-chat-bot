const Scene = require("telegraf/scenes/base");

const { bot } = require("../init/startBot");

const User = require("../models/user");
const MainStats = require("../models/mainstats");

const extraBoard = require("../helpers/slotExtra");
const actionsBord = require("../helpers/slotActions");
const setupStart = require("../commands/start");

const slotGame = new Scene("slotGame");
slotGame.enter(async (ctx) => {
  const { demoBalance, mainBalance } = await User.findOne({
    userId: ctx.from.id,
  });
  const { slotCoef } = await MainStats.findOne();

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Å—Ç–µ–π—Ç –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–µ–π—Ç –∏ –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞
  const initState = {
    ...ctx.session.state,
    rate: {
      jek: 0,
    },
    valueRate: 10,
    countRate: 0,
    rateMenu: true,
    demoBalance,
    mainBalance,
  };
  ctx.session.state = initState;

  const extra = await extraBoard(initState);

  if (process.env.DEV !== "true") {
    try {
      ctx.session.state.activeBoard = await bot.telegram.sendPhoto(
        ctx.from.id,
        "AgACAgIAAxkBAAELz8BhDPHr5BzdYkeMyS3w27Z_jbb7NwAC0LUxG9FSaEiPNb0zl31QeAEAAwIAA3MAAyAE",
        {
          caption: `üé∞ –ê–≤—Ç–æ–º–∞—Ç—ã
–í—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:
- 777 [x${slotCoef.x3_7}]
- 3 –≤ —Ä—è–¥ [x${slotCoef.x3}]
- XXY –∏–ª–∏ YXX [x${slotCoef.x2}]`,
          reply_markup: extra,
        }
      );
    } catch (error) {}
  } else {
    try {
      ctx.session.state.activeBoard = await bot.telegram.sendPhoto(
        ctx.from.id,
        "AgACAgIAAxkBAAJGP2EKgoiW-VUkZVWZioc6VzBl3sgvAAKmtDEbwjVRSB0Lf_qKVpvAAQADAgADcwADIAQ",
        {
          caption: `üé∞ –ê–≤—Ç–æ–º–∞—Ç—ã
–í—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:
- 777 [x${slotCoef.x3_7}]
- 3 –≤ —Ä—è–¥ [x${slotCoef.x3}]
- 2 –≤ —Ä—è–¥ [x${slotCoef.x2}]`,
          reply_markup: extra,
        }
      );
    } catch (error) {}
  }
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º actions
setupStart(slotGame);
actionsBord(slotGame);

module.exports = { slotGame };
