const Extra = require("telegraf/extra");
const MainStats = require("../models/mainstats");

module.exports = async (state) => {
  const { footballCoef } = await MainStats.findOne();
  const inlineBtnHook = (m, name) => m.callbackButton(name, name);
  const valueRate = (count) => {
    if (count === -1 && state.otherRateActive)
      return `üí∞ –î—Ä—É–≥–∞—è —Å—É–º–º–∞ - ${state.otherRate}‚ÇΩ`;
    if (count === -1) return `‚úèÔ∏è –î—Ä—É–≥–∞—è —Å—É–º–º–∞ - ${state.otherRate}‚ÇΩ`;
    if (state.valueRate === count) return `üí∞ ${count}‚ÇΩ`;
    return `${count}‚ÇΩ`;
  };

  return Extra.markup((m) =>
    m.inlineKeyboard([
      [
        inlineBtnHook(m, valueRate(10)),
        inlineBtnHook(m, valueRate(50)),
        inlineBtnHook(m, valueRate(100)),
        inlineBtnHook(m, valueRate(500)),
        inlineBtnHook(m, valueRate(1000)),
      ],
      [inlineBtnHook(m, valueRate(-1)), inlineBtnHook(m, `üóë –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞–≤–∫–∏`)],
      [
        inlineBtnHook(m, `–ó–∞–±–∏–ª  -  üí∞ ${state.rate["goal"]}  [x${footballCoef.goal}]`),
        inlineBtnHook(m, `–ü—Ä–æ–º–∞—Ö  -  üí∞ ${state.rate["out"]}  [x${footballCoef.out}]`),
      ],
      [inlineBtnHook(m, `–£–¥–∞—Ä–∏—Ç—å –ø–æ –≤–æ—Ä–æ—Ç–∞–º ‚öΩÔ∏è`)],
    ])
  );
};
